#include "Drivetrain.h"

//Most of this code was slightly modified from the vexcode's basic impl of controller support. Most comments were generated by vexcode5

bool Drivetrain::RemoteControlCodeEnabled = true;
bool Drivetrain::DrivetrainLNeedsToBeStopped = true;
bool Drivetrain::DrivetrainRNeedsToBeStopped = true;

int Drivetrain::ControllerLoop() {
    while(true) {
      if(RemoteControlCodeEnabled) {
        
        // calculate the drivetrain motor velocities from the controller joystick axies
        // left = Axis3 + Axis1
        // right = Axis3 - Axis1
        int drivetrainLeftSideSpeed = bot::Controller.Axis3.position() + bot::Controller.Axis1.position();
        int drivetrainRightSideSpeed = bot::Controller.Axis3.position() - bot::Controller.Axis1.position();
        
        // check if the value is inside of the deadband range
        if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {
          // check if the left motor has already been stopped
          if (DrivetrainLNeedsToBeStopped) {
            // stop the left drive motor
            bot::LeftMotors.stop();
            // tell the code that the left motor has been stopped
            DrivetrainLNeedsToBeStopped = false;
          }
        } else {
          // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range
          DrivetrainLNeedsToBeStopped = true;
        }
        // check if the value is inside of the deadband range
        if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {
          // check if the right motor has already been stopped
          if (DrivetrainRNeedsToBeStopped) {
            // stop the right drive motor
            bot::RightMotors.stop();
            // tell the code that the right motor has been stopped
            DrivetrainRNeedsToBeStopped = false;
          }
        } else {
          // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range
          DrivetrainRNeedsToBeStopped = true;
        }
        
        // only tell the left drive motor to spin if the values are not in the deadband range
        if (DrivetrainLNeedsToBeStopped) {
          bot::LeftMotors.setVelocity(drivetrainLeftSideSpeed, vex::percent);
          bot::LeftMotors.spin(vex::forward);
        }
        // only tell the right drive motor to spin if the values are not in the deadband range
        if (DrivetrainRNeedsToBeStopped) {
          bot::RightMotors.setVelocity(drivetrainRightSideSpeed, vex::percent);
          bot::RightMotors.spin(vex::forward);
        }
      }
      // wait before repeating the process
      vex::wait(20, vex::msec);
    }
    return 0;
}